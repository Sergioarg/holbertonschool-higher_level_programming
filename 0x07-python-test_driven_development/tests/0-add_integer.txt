================================
The ``0-add_integer`` module
================================

Using function ``add_integer()`` of file ``0-add_integer.py``.
#--------------------------------#

Imports module
#--------------------------------#
    >>> add_integer = __import__('0-add_integer').add_integer

Numbers
=======

``add_integer()`` returns the product of its arguments.
For numbers, that value is equivalent to using the ``+`` operator.

::
    >>> add_integer(1, 2)
    3

    >>> add_integer(-2, -2)
    -4

    >>> add_integer(-98, 98)
    0

    >>> add_integer(100.3, -2)
    98

    >>> add_integer(2)
    100


Non-numbers
===========

Because ``+`` is also defined on data types other than numbers,
``add_integer()`` work just as well if one of the arguments is a
string, a list, or a tuple.

::

    >>> add_integer('a', 3)
    Traceback (most recent call last):
    TypeError: b must be an integer


    >>> add_integer(3, 'b')
    Traceback (most recent call last):
    TypeError: a must be an integer
